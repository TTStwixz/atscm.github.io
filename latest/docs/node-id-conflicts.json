{"content":"<h1 id=\"node-id-conflicts\">Node ID conflicts</h1><blockquote>\n<p><strong>Note that rename files are not available for atscm &lt; v1.0.0.</strong> Use <code>atscm update</code> to use the latest version</p>\n</blockquote>\n<h2 id=\"how-atscm-handles-id-conflicts\">How atscm handles id conflicts</h2><p>Let&#39;s assume we have two atvise server nodes, <em>AGENT.OBJECT.conflictingnode</em> and <em>AGENT.OBJECT.ConflictingNode</em>. These are valid node ids on the server, but when stored to the (case-insensitive) filesystem, the behaviour is undefined.</p>\n<p>When <em>atscm</em> discovers such a name conflict it creates a <em>rename file</em> at <code>./atscm/rename.json</code>. This file will contain a map where the conflicting ids stored against the name to use to resolve the conflict. by default <em>insert node name</em> is used, e.g.:</p>\n<pre><code class=\"language-json\">{\n  <span class=\"hljs-attr\">\"AGENT.OBJECTS.ConflictingNode\"</span>: <span class=\"hljs-string\">\"insert node name\"</span>\n}</code></pre>\n<h2 id=\"how-to-resolve-id-conflicts\">How to resolve id conflicts</h2><p>Once an id conflict is recognized and added to the rename file, it is your responsibility to provide non-conflicting node names, e.g.:</p>\n<pre><code class=\"language-json\">{\n  <span class=\"hljs-attr\">\"AGENT.OBJECTS.ConflictingNode\"</span>: <span class=\"hljs-string\">\"ConflictingNode-renamed\"</span>\n}</code></pre>\n<p>After that <strong>run <code>atscm pull</code> again</strong> to pull the conflicting nodes.</p>\n","sections":[{"title":"How atscm handles id conflicts","slug":"how-atscm-handles-id-conflicts"},{"title":"How to resolve id conflicts","slug":"how-to-resolve-id-conflicts"}],"title":"Node ID conflicts"}